async function loadProducts() {
  try {
    const res = await fetch('/api/products');
    const products = await res.json();

    // N·∫øu API tr·∫£ v·ªÅ l·ªói ho·∫∑c kh√¥ng ph·∫£i m·∫£ng
    if (!Array.isArray(products)) {
      console.error("API /api/products kh√¥ng tr·∫£ v·ªÅ m·∫£ng:", products);
      return;
    }

    const container = document.getElementById('product-list');
    container.innerHTML = products.map(p => `
      <div class="product">
        <img src="${p.image}" width="150">
        <h3>${p.name}</h3>
        <p>${Number(p.price).toLocaleString()}ƒë</p>
        <a href="product.html?id=${p._id}">Xem chi ti·∫øt</a><br>
        <button onclick="addToCart('${p._id}')">üõí Th√™m v√†o gi·ªè</button>
      </div>
    `).join('');
  } catch (error) {
    console.error("L·ªói khi t·∫£i s·∫£n ph·∫©m:", error);
  }
}

async function addToCart(productId) {
  const userId = localStorage.getItem("userId");

  // N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p
  if (!userId) {
    alert("‚ö†Ô∏è Vui l√≤ng ƒëƒÉng nh·∫≠p tr∆∞·ªõc khi th√™m v√†o gi·ªè h√†ng!");
    window.location.href = "login.html";
    return;
  }

  try {
    const res = await fetch("/api/cart", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ userId, productId, quantity: 1 })
    });

    const data = await res.json();
    if (!res.ok) throw new Error(data.message);
    alert("‚úÖ ƒê√£ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng!");
  } catch (err) {
    console.error("L·ªói khi th√™m gi·ªè h√†ng:", err);
    alert("‚ùå " + err.message);
  }
}
const logoutBtn = document.getElementById("logoutBtn");

logoutBtn.addEventListener("click", () => {
  // X√≥a d·ªØ li·ªáu ng∆∞·ªùi d√πng kh·ªèi localStorage
  localStorage.removeItem("token");
  localStorage.removeItem("userId");
  localStorage.removeItem("isAdmin");

  // Redirect v·ªÅ trang login
  window.location.href = "login.html";
});
// G·ªçi khi trang load
loadProducts();
